name: "ecom-actions"
on:
    push:
        branches:
            - stage
            - main
        paths:
            - Terraform/**
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
    TF_STATE_BUCKET: ${{ secrets.BUCKET_TF_STATE}}
    AWS_REGION: us-east-1
    EKS_CLUSTER: ecom-eks
jobs:
    terraform:
        name: "Apply Terraform Changes"
        runs-on: ubuntu-latest
        permissions:
          actions: read
          contents: read
          security-events: write
        defaults:
            run:
                shell: bash
                working-directory: ./Terraform
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4
              with:
                token: ${{ secrets.REPO_TOKEN }}

            - name: Run Trivy vulnerability scanner in IaC mode
              uses: aquasecurity/trivy-action@master
              with:
                scan-type: 'config'
                hide-progress: true
                format: 'sarif'
                output: 'trivy-results.sarif'
                exit-code: '0'
                ignore-unfixed: true
                severity: 'CRITICAL,HIGH'
            
            - name: Run Python script to update SARIF URIs
              run: python /home/runner/work/Ecom_AWS_IAC/Ecom_AWS_IAC/update_uris.py trivy-results.sarif
              

            - name: Upload Trivy scan results to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v3
              with:
                sarif_file: 'trivy-results.sarif'

            - name: Install Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform init
              id: init
              run: terraform init -backend-config="bucket=$TF_STATE_BUCKET"

            - name: Terraform fmt
              id: fmt
              run: terraform fmt -check

            - name: Terraform validate
              id: validate
              run: terraform validate

            - name: Terraform plan
              id: plan
              run: terraform plan -no-color -input=false -out planfile
              continue-on-error: true

            - name: Terraform plan status
              if: steps.plan.outcome == 'failure'
              run: exit 1

            - name: Terraform apply
              id: apply
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: terraform apply -auto-approve -input=false -parallelism=1 planfile

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: ${{ env.AWS_REGION }}
                aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

            - name: Get kubeconfig file
              id: kubeconfig
              if: steps.apply.outcome == 'success'
              run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

            - name: Install ingress controller
              id: ingress
              if: steps.apply.outcome == 'success' && steps.kubeconfig.outcome == 'success'
              run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/aws/deploy.yaml

              
            




        